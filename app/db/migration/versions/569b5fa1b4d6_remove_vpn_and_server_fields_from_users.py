"""remove_vpn_and_server_fields_from_users

Revision ID: 569b5fa1b4d6
Revises: 032f2bef8d8d
Create Date: 2025-07-21 22:20:22.062900

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '569b5fa1b4d6'
down_revision: Union[str, None] = '032f2bef8d8d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support DROP COLUMN directly, so we need to recreate the table
    
    # Create new users table without vpn_id and server_id
    op.execute('''
        CREATE TABLE users_new (
            id INTEGER NOT NULL,
            tg_id INTEGER NOT NULL,
            first_name VARCHAR(32) NOT NULL,
            username VARCHAR(32),
            created_at DATETIME NOT NULL,
            language_code VARCHAR(5) NOT NULL,
            is_trial_used BOOLEAN NOT NULL DEFAULT 0,
            source_invite_name VARCHAR(100),
            CONSTRAINT pk_users PRIMARY KEY (id),
            CONSTRAINT uq_users_tg_id UNIQUE (tg_id)
        )
    ''')
    
    # Copy data from old table to new table
    op.execute('''
        INSERT INTO users_new (id, tg_id, first_name, username, created_at, language_code, is_trial_used, source_invite_name)
        SELECT id, tg_id, first_name, username, created_at, language_code, is_trial_used, source_invite_name
        FROM users
    ''')
    
    # Drop old table and rename new table
    op.execute('DROP TABLE users')
    op.execute('ALTER TABLE users_new RENAME TO users')
    
    # Drop servers table if it exists
    op.execute('DROP TABLE IF EXISTS servers')
    
    # Update invites table columns
    with op.batch_alter_table('invites', schema=None) as batch_op:
        batch_op.alter_column('clicks',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('server_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('vpn_id', sa.VARCHAR(length=36), nullable=False))
        batch_op.create_foreign_key('fk_users_server_id_servers', 'servers', ['server_id'], ['id'], ondelete='SET NULL')
        batch_op.create_unique_constraint('uq_users_vpn_id', ['vpn_id'])

    with op.batch_alter_table('invites', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('clicks',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('servers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('host', sa.VARCHAR(length=255), nullable=False),
    sa.Column('max_clients', sa.INTEGER(), nullable=False),
    sa.Column('location', sa.VARCHAR(length=32), nullable=True),
    sa.Column('online', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_servers'),
    sa.UniqueConstraint('name', name='uq_servers_name')
    )
    # ### end Alembic commands ###
