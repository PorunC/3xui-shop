[tool.poetry]
name = "3xui-shop"
version = "1.0.0"
description = "This is a Telegram bot for selling digital products. Supports various electronic goods and services."
authors = ["snoups"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.15.0"
babel = "^2.16.0"
environs = "^11.2.1"
cachetools = "^5.5.0"
requests = "^2.31.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
aiosqlite = "^0.20.0"
alembic = "^1.14.0"
redis = "^5.2.1"
apscheduler = "^3.11.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.0"
pytest-cov = "^4.1.0"
fakeredis = "^2.20.0"
aioresponses = "^0.7.4"
freezegun = "^1.3.0"
factory-boy = "^3.3.0"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/db/migration/*",
    "app/logs/*",
    "app/data/*",
    "test_polling.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
